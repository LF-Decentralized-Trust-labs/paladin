// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package metrics

import (
	"time"

	mock "github.com/stretchr/testify/mock"
)

// NewMockDistributedSequencerMetrics creates a new instance of MockDistributedSequencerMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockDistributedSequencerMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockDistributedSequencerMetrics {
	mock := &MockDistributedSequencerMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockDistributedSequencerMetrics is an autogenerated mock type for the DistributedSequencerMetrics type
type MockDistributedSequencerMetrics struct {
	mock.Mock
}

type MockDistributedSequencerMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockDistributedSequencerMetrics) EXPECT() *MockDistributedSequencerMetrics_Expecter {
	return &MockDistributedSequencerMetrics_Expecter{mock: &_m.Mock}
}

// DecCoordinatingTransactions provides a mock function for the type MockDistributedSequencerMetrics
func (_mock *MockDistributedSequencerMetrics) DecCoordinatingTransactions() {
	_mock.Called()
	return
}

// MockDistributedSequencerMetrics_DecCoordinatingTransactions_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DecCoordinatingTransactions'
type MockDistributedSequencerMetrics_DecCoordinatingTransactions_Call struct {
	*mock.Call
}

// DecCoordinatingTransactions is a helper method to define mock.On call
func (_e *MockDistributedSequencerMetrics_Expecter) DecCoordinatingTransactions() *MockDistributedSequencerMetrics_DecCoordinatingTransactions_Call {
	return &MockDistributedSequencerMetrics_DecCoordinatingTransactions_Call{Call: _e.mock.On("DecCoordinatingTransactions")}
}

func (_c *MockDistributedSequencerMetrics_DecCoordinatingTransactions_Call) Run(run func()) *MockDistributedSequencerMetrics_DecCoordinatingTransactions_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockDistributedSequencerMetrics_DecCoordinatingTransactions_Call) Return() *MockDistributedSequencerMetrics_DecCoordinatingTransactions_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockDistributedSequencerMetrics_DecCoordinatingTransactions_Call) RunAndReturn(run func()) *MockDistributedSequencerMetrics_DecCoordinatingTransactions_Call {
	_c.Run(run)
	return _c
}

// IncAcceptedTransactions provides a mock function for the type MockDistributedSequencerMetrics
func (_mock *MockDistributedSequencerMetrics) IncAcceptedTransactions() {
	_mock.Called()
	return
}

// MockDistributedSequencerMetrics_IncAcceptedTransactions_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncAcceptedTransactions'
type MockDistributedSequencerMetrics_IncAcceptedTransactions_Call struct {
	*mock.Call
}

// IncAcceptedTransactions is a helper method to define mock.On call
func (_e *MockDistributedSequencerMetrics_Expecter) IncAcceptedTransactions() *MockDistributedSequencerMetrics_IncAcceptedTransactions_Call {
	return &MockDistributedSequencerMetrics_IncAcceptedTransactions_Call{Call: _e.mock.On("IncAcceptedTransactions")}
}

func (_c *MockDistributedSequencerMetrics_IncAcceptedTransactions_Call) Run(run func()) *MockDistributedSequencerMetrics_IncAcceptedTransactions_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockDistributedSequencerMetrics_IncAcceptedTransactions_Call) Return() *MockDistributedSequencerMetrics_IncAcceptedTransactions_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockDistributedSequencerMetrics_IncAcceptedTransactions_Call) RunAndReturn(run func()) *MockDistributedSequencerMetrics_IncAcceptedTransactions_Call {
	_c.Run(run)
	return _c
}

// IncAssembledTransactions provides a mock function for the type MockDistributedSequencerMetrics
func (_mock *MockDistributedSequencerMetrics) IncAssembledTransactions() {
	_mock.Called()
	return
}

// MockDistributedSequencerMetrics_IncAssembledTransactions_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncAssembledTransactions'
type MockDistributedSequencerMetrics_IncAssembledTransactions_Call struct {
	*mock.Call
}

// IncAssembledTransactions is a helper method to define mock.On call
func (_e *MockDistributedSequencerMetrics_Expecter) IncAssembledTransactions() *MockDistributedSequencerMetrics_IncAssembledTransactions_Call {
	return &MockDistributedSequencerMetrics_IncAssembledTransactions_Call{Call: _e.mock.On("IncAssembledTransactions")}
}

func (_c *MockDistributedSequencerMetrics_IncAssembledTransactions_Call) Run(run func()) *MockDistributedSequencerMetrics_IncAssembledTransactions_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockDistributedSequencerMetrics_IncAssembledTransactions_Call) Return() *MockDistributedSequencerMetrics_IncAssembledTransactions_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockDistributedSequencerMetrics_IncAssembledTransactions_Call) RunAndReturn(run func()) *MockDistributedSequencerMetrics_IncAssembledTransactions_Call {
	_c.Run(run)
	return _c
}

// IncConfirmedTransactions provides a mock function for the type MockDistributedSequencerMetrics
func (_mock *MockDistributedSequencerMetrics) IncConfirmedTransactions() {
	_mock.Called()
	return
}

// MockDistributedSequencerMetrics_IncConfirmedTransactions_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncConfirmedTransactions'
type MockDistributedSequencerMetrics_IncConfirmedTransactions_Call struct {
	*mock.Call
}

// IncConfirmedTransactions is a helper method to define mock.On call
func (_e *MockDistributedSequencerMetrics_Expecter) IncConfirmedTransactions() *MockDistributedSequencerMetrics_IncConfirmedTransactions_Call {
	return &MockDistributedSequencerMetrics_IncConfirmedTransactions_Call{Call: _e.mock.On("IncConfirmedTransactions")}
}

func (_c *MockDistributedSequencerMetrics_IncConfirmedTransactions_Call) Run(run func()) *MockDistributedSequencerMetrics_IncConfirmedTransactions_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockDistributedSequencerMetrics_IncConfirmedTransactions_Call) Return() *MockDistributedSequencerMetrics_IncConfirmedTransactions_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockDistributedSequencerMetrics_IncConfirmedTransactions_Call) RunAndReturn(run func()) *MockDistributedSequencerMetrics_IncConfirmedTransactions_Call {
	_c.Run(run)
	return _c
}

// IncCoordinatingTransactions provides a mock function for the type MockDistributedSequencerMetrics
func (_mock *MockDistributedSequencerMetrics) IncCoordinatingTransactions() {
	_mock.Called()
	return
}

// MockDistributedSequencerMetrics_IncCoordinatingTransactions_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncCoordinatingTransactions'
type MockDistributedSequencerMetrics_IncCoordinatingTransactions_Call struct {
	*mock.Call
}

// IncCoordinatingTransactions is a helper method to define mock.On call
func (_e *MockDistributedSequencerMetrics_Expecter) IncCoordinatingTransactions() *MockDistributedSequencerMetrics_IncCoordinatingTransactions_Call {
	return &MockDistributedSequencerMetrics_IncCoordinatingTransactions_Call{Call: _e.mock.On("IncCoordinatingTransactions")}
}

func (_c *MockDistributedSequencerMetrics_IncCoordinatingTransactions_Call) Run(run func()) *MockDistributedSequencerMetrics_IncCoordinatingTransactions_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockDistributedSequencerMetrics_IncCoordinatingTransactions_Call) Return() *MockDistributedSequencerMetrics_IncCoordinatingTransactions_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockDistributedSequencerMetrics_IncCoordinatingTransactions_Call) RunAndReturn(run func()) *MockDistributedSequencerMetrics_IncCoordinatingTransactions_Call {
	_c.Run(run)
	return _c
}

// IncDispatchedTransactions provides a mock function for the type MockDistributedSequencerMetrics
func (_mock *MockDistributedSequencerMetrics) IncDispatchedTransactions() {
	_mock.Called()
	return
}

// MockDistributedSequencerMetrics_IncDispatchedTransactions_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncDispatchedTransactions'
type MockDistributedSequencerMetrics_IncDispatchedTransactions_Call struct {
	*mock.Call
}

// IncDispatchedTransactions is a helper method to define mock.On call
func (_e *MockDistributedSequencerMetrics_Expecter) IncDispatchedTransactions() *MockDistributedSequencerMetrics_IncDispatchedTransactions_Call {
	return &MockDistributedSequencerMetrics_IncDispatchedTransactions_Call{Call: _e.mock.On("IncDispatchedTransactions")}
}

func (_c *MockDistributedSequencerMetrics_IncDispatchedTransactions_Call) Run(run func()) *MockDistributedSequencerMetrics_IncDispatchedTransactions_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockDistributedSequencerMetrics_IncDispatchedTransactions_Call) Return() *MockDistributedSequencerMetrics_IncDispatchedTransactions_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockDistributedSequencerMetrics_IncDispatchedTransactions_Call) RunAndReturn(run func()) *MockDistributedSequencerMetrics_IncDispatchedTransactions_Call {
	_c.Run(run)
	return _c
}

// IncEndorsedTransactions provides a mock function for the type MockDistributedSequencerMetrics
func (_mock *MockDistributedSequencerMetrics) IncEndorsedTransactions() {
	_mock.Called()
	return
}

// MockDistributedSequencerMetrics_IncEndorsedTransactions_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncEndorsedTransactions'
type MockDistributedSequencerMetrics_IncEndorsedTransactions_Call struct {
	*mock.Call
}

// IncEndorsedTransactions is a helper method to define mock.On call
func (_e *MockDistributedSequencerMetrics_Expecter) IncEndorsedTransactions() *MockDistributedSequencerMetrics_IncEndorsedTransactions_Call {
	return &MockDistributedSequencerMetrics_IncEndorsedTransactions_Call{Call: _e.mock.On("IncEndorsedTransactions")}
}

func (_c *MockDistributedSequencerMetrics_IncEndorsedTransactions_Call) Run(run func()) *MockDistributedSequencerMetrics_IncEndorsedTransactions_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockDistributedSequencerMetrics_IncEndorsedTransactions_Call) Return() *MockDistributedSequencerMetrics_IncEndorsedTransactions_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockDistributedSequencerMetrics_IncEndorsedTransactions_Call) RunAndReturn(run func()) *MockDistributedSequencerMetrics_IncEndorsedTransactions_Call {
	_c.Run(run)
	return _c
}

// ObserveSequencerTXStateChange provides a mock function for the type MockDistributedSequencerMetrics
func (_mock *MockDistributedSequencerMetrics) ObserveSequencerTXStateChange(state string, duration time.Duration) {
	_mock.Called(state, duration)
	return
}

// MockDistributedSequencerMetrics_ObserveSequencerTXStateChange_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ObserveSequencerTXStateChange'
type MockDistributedSequencerMetrics_ObserveSequencerTXStateChange_Call struct {
	*mock.Call
}

// ObserveSequencerTXStateChange is a helper method to define mock.On call
//   - state string
//   - duration time.Duration
func (_e *MockDistributedSequencerMetrics_Expecter) ObserveSequencerTXStateChange(state interface{}, duration interface{}) *MockDistributedSequencerMetrics_ObserveSequencerTXStateChange_Call {
	return &MockDistributedSequencerMetrics_ObserveSequencerTXStateChange_Call{Call: _e.mock.On("ObserveSequencerTXStateChange", state, duration)}
}

func (_c *MockDistributedSequencerMetrics_ObserveSequencerTXStateChange_Call) Run(run func(state string, duration time.Duration)) *MockDistributedSequencerMetrics_ObserveSequencerTXStateChange_Call {
	_c.Call.Run(func(args mock.Arguments) {
		var arg0 string
		if args[0] != nil {
			arg0 = args[0].(string)
		}
		var arg1 time.Duration
		if args[1] != nil {
			arg1 = args[1].(time.Duration)
		}
		run(
			arg0,
			arg1,
		)
	})
	return _c
}

func (_c *MockDistributedSequencerMetrics_ObserveSequencerTXStateChange_Call) Return() *MockDistributedSequencerMetrics_ObserveSequencerTXStateChange_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockDistributedSequencerMetrics_ObserveSequencerTXStateChange_Call) RunAndReturn(run func(state string, duration time.Duration)) *MockDistributedSequencerMetrics_ObserveSequencerTXStateChange_Call {
	_c.Run(run)
	return _c
}

// SetActiveCoordinators provides a mock function for the type MockDistributedSequencerMetrics
func (_mock *MockDistributedSequencerMetrics) SetActiveCoordinators(numberOfActiveCoordinators int) {
	_mock.Called(numberOfActiveCoordinators)
	return
}

// MockDistributedSequencerMetrics_SetActiveCoordinators_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetActiveCoordinators'
type MockDistributedSequencerMetrics_SetActiveCoordinators_Call struct {
	*mock.Call
}

// SetActiveCoordinators is a helper method to define mock.On call
//   - numberOfActiveCoordinators int
func (_e *MockDistributedSequencerMetrics_Expecter) SetActiveCoordinators(numberOfActiveCoordinators interface{}) *MockDistributedSequencerMetrics_SetActiveCoordinators_Call {
	return &MockDistributedSequencerMetrics_SetActiveCoordinators_Call{Call: _e.mock.On("SetActiveCoordinators", numberOfActiveCoordinators)}
}

func (_c *MockDistributedSequencerMetrics_SetActiveCoordinators_Call) Run(run func(numberOfActiveCoordinators int)) *MockDistributedSequencerMetrics_SetActiveCoordinators_Call {
	_c.Call.Run(func(args mock.Arguments) {
		var arg0 int
		if args[0] != nil {
			arg0 = args[0].(int)
		}
		run(
			arg0,
		)
	})
	return _c
}

func (_c *MockDistributedSequencerMetrics_SetActiveCoordinators_Call) Return() *MockDistributedSequencerMetrics_SetActiveCoordinators_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockDistributedSequencerMetrics_SetActiveCoordinators_Call) RunAndReturn(run func(numberOfActiveCoordinators int)) *MockDistributedSequencerMetrics_SetActiveCoordinators_Call {
	_c.Run(run)
	return _c
}

// SetActiveSequencers provides a mock function for the type MockDistributedSequencerMetrics
func (_mock *MockDistributedSequencerMetrics) SetActiveSequencers(numberOfActiveSequencers int) {
	_mock.Called(numberOfActiveSequencers)
	return
}

// MockDistributedSequencerMetrics_SetActiveSequencers_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetActiveSequencers'
type MockDistributedSequencerMetrics_SetActiveSequencers_Call struct {
	*mock.Call
}

// SetActiveSequencers is a helper method to define mock.On call
//   - numberOfActiveSequencers int
func (_e *MockDistributedSequencerMetrics_Expecter) SetActiveSequencers(numberOfActiveSequencers interface{}) *MockDistributedSequencerMetrics_SetActiveSequencers_Call {
	return &MockDistributedSequencerMetrics_SetActiveSequencers_Call{Call: _e.mock.On("SetActiveSequencers", numberOfActiveSequencers)}
}

func (_c *MockDistributedSequencerMetrics_SetActiveSequencers_Call) Run(run func(numberOfActiveSequencers int)) *MockDistributedSequencerMetrics_SetActiveSequencers_Call {
	_c.Call.Run(func(args mock.Arguments) {
		var arg0 int
		if args[0] != nil {
			arg0 = args[0].(int)
		}
		run(
			arg0,
		)
	})
	return _c
}

func (_c *MockDistributedSequencerMetrics_SetActiveSequencers_Call) Return() *MockDistributedSequencerMetrics_SetActiveSequencers_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockDistributedSequencerMetrics_SetActiveSequencers_Call) RunAndReturn(run func(numberOfActiveSequencers int)) *MockDistributedSequencerMetrics_SetActiveSequencers_Call {
	_c.Run(run)
	return _c
}
