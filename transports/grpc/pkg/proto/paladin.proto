/*
 * Copyright Â© 2024 Kaleido, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

syntax = "proto3";
package io.kaleido.paladin.transports.grpc;
option go_package = "pkg/proto";

service PaladinGRPCTransport {
  // The sender of messages connects a unidirectional stream, and the server should hold it open for us indefinitely.
  rpc ConnectSendStream(stream Message) returns (Empty) {}
}

message Empty {}

message Message {
  string message_id = 1;
  optional string correlation_id = 2;
  string node = 3;
  string component = 4;
  string reply_to = 5;
  string message_type = 6;
  bytes payload = 7;
}