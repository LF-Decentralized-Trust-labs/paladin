name: Paladin CI build

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install protoc
        run: |
          PB_REL="https://github.com/protocolbuffers/protobuf/releases"
          curl -LO $PB_REL/download/v25.1/protoc-25.1-linux-x86_64.zip
          unzip protoc-25.1-linux-x86_64.zip -d protoc
          echo "${PWD}/protoc/bin" >> $GITHUB_PATH

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          check-latest: true
          cache-dependency-path: |
            **/*.sum
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: ./gradlew -PcomposeLogs=true -PverboseTests=true --no-daemon --parallel build
      
      # Run the Gradle assemble task
      - name: Run Gradle assemble
        run: ./gradlew assemble

      # Verify the files in build/libs
      - name: Check files in build/libs
        run: |
          test -f build/libs/libcore.dylib || (echo "libcore.dylib not found" && exit 1)
          test -f build/libs/libcore.h || (echo "libcore.h not found" && exit 1)
          test -f build/libs/libstarter.dylib || (echo "libstarter.dylib not found" && exit 1)
          test -f build/libs/libstarter.h || (echo "libstarter.h not found" && exit 1)
          test -f build/libs/paladin.jar || (echo "paladin.jar not found" && exit 1)

      # Verify the files in build/domains
      - name: Check files in build/domains
        run: |
          test -f build/domains/pente.jar || (echo "pente.jar not found" && exit 1)

