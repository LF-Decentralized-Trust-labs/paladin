name: Check Examples Metadata Version Changes

on:
  pull_request:
    paths:
      - 'examples/**/metadata.json'
      - '.github/workflows/check-metadata-changes.yml'
  push:
    branches:
      - main
    paths:
      - 'examples/**/metadata.json'
      - '.github/workflows/check-metadata-changes.yml'

jobs:
  check-metadata-versions:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history to compare with base branch
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Check for metadata version changes
        run: |
          echo "Checking for metadata version changes..."
          
          # Get the base branch (usually main or master)
          BASE_BRANCH="${GITHUB_BASE_REF:-main}"
          
          # Find all metadata.json files that were changed
          CHANGED_METADATA_FILES=$(git diff --name-only origin/$BASE_BRANCH...HEAD | grep 'examples/.*/metadata\.json$' || true)
          
          if [ -z "$CHANGED_METADATA_FILES" ]; then
            echo "No metadata.json files were changed"
            exit 0
          fi
          
          echo "Changed metadata files:"
          echo "$CHANGED_METADATA_FILES"
          echo ""
          
          # Function to extract version number from range
          extract_version_number() {
            local version_range="$1"
            # Remove range operators: ^, ~, >=, <=, >, <, =
            echo "$version_range" | sed 's/^[^0-9]*//' | sed 's/[^0-9.]*$//'
          }
          
          # Check each changed metadata file for version changes
          FAILED_CHECKS=0
          
          for file in $CHANGED_METADATA_FILES; do
            echo "Checking $file..."
            
            # Get the old and new versions
            OLD_VERSION_RANGE=$(git show "origin/$BASE_BRANCH:$file" 2>/dev/null | jq -r '.version // "null"' || echo "null")
            NEW_VERSION_RANGE=$(cat "$file" | jq -r '.version // "null"')
            
            echo "  Old version range: $OLD_VERSION_RANGE"
            echo "  New version range: $NEW_VERSION_RANGE"
            
            # Extract just the version numbers (without range operators)
            OLD_VERSION_NUMBER=$(extract_version_number "$OLD_VERSION_RANGE")
            NEW_VERSION_NUMBER=$(extract_version_number "$NEW_VERSION_RANGE")
            
            echo "  Old version number: $OLD_VERSION_NUMBER"
            echo "  New version number: $NEW_VERSION_NUMBER"
            
            if [ "$OLD_VERSION_NUMBER" != "$NEW_VERSION_NUMBER" ]; then
              echo "  ERROR: Version number was changed!"
              echo "  Please do not modify the version number in metadata.json files."
              echo "  If you need to change version requirements, create a new example or update the SDK version."
              echo "  Note: Changing range operators (^, ~, >=, etc.) is allowed as long as the version number stays the same."
              FAILED_CHECKS=$((FAILED_CHECKS + 1))
            else
              echo "  Version number unchanged"
            fi
            echo ""
          done
          
          if [ $FAILED_CHECKS -gt 0 ]; then
            echo "Found $FAILED_CHECKS metadata file(s) with version number changes"
            echo ""
            echo "Version number changes in metadata.json are not allowed because:"
            echo "   - They can break example compatibility with different SDK versions"
            echo "   - They can cause examples to run with incompatible SDK versions"
            echo "   - They can lead to CI/CD failures in different environments"
            echo ""
            echo "Instead of changing version numbers:"
            echo "   - Create a new example if you need different version requirements"
            echo "   - Update the SDK version if the example should work with newer versions"
            echo "   - Use different range operators (e.g., ^0.9.0 vs ~0.9.0) if needed"
            echo ""
            echo "Allowed changes:"
            echo "   - Changing range operators: ^0.9.0 → ~0.9.0 (same version, different range)"
            echo "   - Changing range operators: ^0.9.0 → >=0.9.0 (same version, different range)"
            echo "   - Modifying name or description fields"
            echo ""
            echo "Not allowed:"
            echo "   - Changing version numbers: ^0.9.0 → ^0.10.0 (different version)"
            echo "   - Changing version numbers: ~0.9.0 → ~1.0.0 (different version)"
            exit 1
          fi
          
          echo "All metadata files passed version number change checks" 