// Code generated by mockery v2.40.2. DO NOT EDIT.

package registrymocks

import (
	talaria "github.com/kaleido-io/talaria/pkg/talaria"
	mock "github.com/stretchr/testify/mock"
)

// RegistryProvider is an autogenerated mock type for the RegistryProvider type
type RegistryProvider struct {
	mock.Mock
}

// LookupPaladinEntity provides a mock function with given fields: identity
func (_m *RegistryProvider) LookupPaladinEntity(identity string) (talaria.RegistryEntry, error) {
	ret := _m.Called(identity)

	if len(ret) == 0 {
		panic("no return value specified for LookupPaladinEntity")
	}

	var r0 talaria.RegistryEntry
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (talaria.RegistryEntry, error)); ok {
		return rf(identity)
	}
	if rf, ok := ret.Get(0).(func(string) talaria.RegistryEntry); ok {
		r0 = rf(identity)
	} else {
		r0 = ret.Get(0).(talaria.RegistryEntry)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(identity)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewRegistryProvider creates a new instance of RegistryProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRegistryProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *RegistryProvider {
	mock := &RegistryProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
