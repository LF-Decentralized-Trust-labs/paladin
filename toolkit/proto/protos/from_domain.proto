/*
 * Copyright Â© 2024 Kaleido, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

syntax = "proto3";

package github.com.kaleido_io.paladin.toolkit;

message FindAvailableStatesRequest {
  string schema_id = 1; // The ID of the schema
  string query_json = 2; // The query specification in JSON
}

message FindAvailableStatesResponse {
  repeated StoredState states = 1;
}

message EncodeDataRequest {
  enum EncodingType {
    TUPLE = 0;
    FUNCTION_CALL_DATA = 1;
    ETH_TRANSACTION = 2;
  }
  EncodingType encoding_type = 1;
  string body = 2;
  string definition = 3;
}

message EncodeDataResponse {
  bytes data = 1;
}


message RecoverSignerRequest {
  string algorithm = 1;
  bytes payload = 2;
  bytes signature = 3;
}

message RecoverSignerResponse {
  string verifier = 1;
}


message StoredState {
  string id = 1;
  string schema_id = 2;
  int64 stored_at = 3;
  string data_json = 4;
  optional StateLock lock = 5;
}

message StateLock {
  string transaction = 1;
  bool creating = 2;
  bool spending = 3;
}
