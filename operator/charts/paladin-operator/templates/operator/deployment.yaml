{{- $checksums := fromYaml (include "checksums" .) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.operator.name }}
  labels:
    app.kubernetes.io/name: {{ .Values.operator.name }}
    {{- with .Values.operator.labels }}
    {{ toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with .Values.operator.annotations }}
    {{ toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.operator.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.operator.name }}
        {{- with .Values.operator.labels }}
        {{ toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- with .Values.operator.annotations }}
        checksum/operator-config: {{ $checksums.operatorConfig }} # Add a checksum annotation to trigger a rolling update when the config changes
        {{ toYaml . | nindent 8 }}
        {{- else }}
        checksum/operator-config: {{ $checksums.operatorConfig }} # Add a checksum annotation to trigger a rolling update when the config changes
        {{- end }}
    spec:
      serviceAccountName: {{ .Values.operator.name }}
      {{- with .Values.operator.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Values.operator.name }}
        image: "{{ .Values.operator.image.repository }}:{{ .Values.operator.image.tag }}"
        imagePullPolicy: {{ .Values.operator.image.pullPolicy }}
        command:
          - /manager
        ports:
          - containerPort: {{ .Values.operator.service.port }}
            name: http
            protocol: TCP
          {{- if .Values.webhook.enabled }}
          - containerPort: 9443
            name: webhook
            protocol: TCP
          {{- end }}
        env:
          - name: WATCH_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: ENABLE_WEBHOOKS
            value: "{{ .Values.webhook.enabled }}"
          {{- range .Values.operator.env }}
          - name: {{ .name }}
            value: {{ .value | quote }}
          {{- end }}
        livenessProbe:
          {{- toYaml .Values.operator.livenessProbe | nindent 10 }}
        readinessProbe:
          {{- toYaml .Values.operator.readinessProbe | nindent 10 }}
        resources:
          {{- toYaml .Values.operator.resources | nindent 10 }}
        {{- with .Values.operator.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
          {{- if .Values.webhook.enabled }}
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
          {{- end }}
          {{- toYaml .Values.operator.volumeMounts | nindent 10 }}
      volumes:
        {{- if .Values.webhook.enabled }}
        - name: cert
          secret:
            defaultMode: 420
            secretName: webhook-server-cert
        {{- end }}
        {{- toYaml .Values.operator.volumes | nindent 8 }}
      {{- with .Values.operator.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.operator.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.operator.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}