apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: smartcontractdeployments.core.paladin.io
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  labels:
  {{- include "paladin-operator-crd.labels" . | nindent 4 }}
spec:
  group: core.paladin.io
  names:
    kind: SmartContractDeployment
    listKind: SmartContractDeploymentList
    plural: smartcontractdeployments
    shortNames:
    - scd
    singular: smartcontractdeployment
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.transactionStatus
      name: Status
      type: string
    - jsonPath: .status.contractDepsSummary
      name: Deps
      type: string
    - jsonPath: .status.transactionID
      name: TransactionID
      type: string
    - jsonPath: .status.contractAddress
      name: Contract
      type: string
    - jsonPath: .status.transactionHash
      name: TxHash
      type: string
    - jsonPath: .status.failureMessage
      name: Failure
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SmartContractDeployment is the Schema for the smartcontractdeployments
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SmartContractDeploymentSpec defines the desired state of SmartContractDeployment
            properties:
              abiJSON:
                description: The ABI of the smart contract - provides the constructor
                  parameter definition
                type: string
              bytecode:
                description: The bytecode of the smart contract
                type: string
              domain:
                description: Domain for private transactions
                type: string
              from:
                description: Reference to the signing key to use to deploy
                type: string
              linkReferencesJSON:
                description: Unlinked contracts have list of the references that need
                  to be resolve, alongside the bytecode
                type: string
              linkedContracts:
                additionalProperties:
                  type: string
                description: |-
                  If the bytecode is unlinked, then this map will be used to resolve the dependencies.
                  The keys in the map are the library name, which can be optionally fully qualified
                  with the syntax FileName.sol:LibName. An entry must be provided for every
                  unlinked dependency, or the CR will not perform a deployment.
  
                  The values are evaluated as go templates, with access to the CR.
                  So you can refer to .status.resolvedContractAddresses in the values via go templating.
                  See https://docs.soliditylang.org/en/latest/using-the-compiler.html#library-linking for detail
                type: object
              node:
                description: The node to use to deploy - reference to a PaladinNode
                  CR
                type: string
              paramsJSON:
                description: JSON parameter data (array, object, or empty if no params)
                type: string
              requiredContractDeployments:
                description: |-
                  This CR will wait for the deployment of all contracts in this list, before
                  parsing the bytecode for deployment. This allows unlinked dependencies
                  to be linked before deployment.
                items:
                  type: string
                type: array
              txType:
                default: public
                description: Type of transaction to submit to Paladin
                enum:
                - public
                - private
                type: string
            required:
            - abiJSON
            - bytecode
            - from
            - node
            - txType
            type: object
          status:
            description: SmartContractDeploymentStatus defines the observed state of
              SmartContractDeployment
            properties:
              contractAddress:
                type: string
              contractDepsSummary:
                type: string
              failureMessage:
                type: string
              idempotencyKey:
                type: string
              resolvedContractAddresses:
                additionalProperties:
                  type: string
                type: object
              transactionHash:
                type: string
              transactionID:
                type: string
              transactionStatus:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []