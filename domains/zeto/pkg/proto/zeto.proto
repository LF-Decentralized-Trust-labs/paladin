/*
 * Copyright Â© 2024 Kaleido, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

syntax = "proto3";

package io.kaleido.paladin.kata.zeto;
option go_package = "pkg/proto";

message ProvingRequest {
  string circuitId = 1;
  ProvingRequestCommon common = 2;
  bytes extras = 3;
}

message ProvingRequestCommon {
  repeated string inputCommitments = 1;
  repeated uint64 inputValues = 2;
  repeated string inputSalts = 3;
  string inputOwner = 4;
  repeated string outputCommitments = 5;
  repeated uint64 outputValues = 6;
  repeated string outputSalts = 7;
  repeated string outputOwners = 8;
}

message ProvingRequestExtras_Encryption {
  string encryptionNonce = 1;
}

message ProvingRequestExtras_Nullifiers {
  string root = 1;
  repeated MerkleProof merkleProofs = 2;
  repeated bool enabled = 3;
}

message ProvingRequestExtras_NonFungible {
  repeated string tokenIds = 1;
  repeated string tokenUris = 2;
}

message ProvingRequestExtras_NonFungible_Nullifier {
  ProvingRequestExtras_Nullifiers nullifier = 1;
  ProvingRequestExtras_NonFungible token = 2;
}

message MerkleProof {
  repeated string nodes = 1;
}

message ProvingResponse {
  SnarkProof proof = 1;
  map<string, string> publicInputs = 2;
}

message SnarkProof {
 	repeated string  A = 1;
	repeated B_Item B = 2;
	repeated string  C = 3;
	string Protocol = 4;
}

message B_Item {
  repeated string items = 1;
}