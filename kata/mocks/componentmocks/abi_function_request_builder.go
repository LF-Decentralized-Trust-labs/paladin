// Code generated by mockery v2.44.2. DO NOT EDIT.

package componentmocks

import (
	ethsigner "github.com/hyperledger/firefly-signer/pkg/ethsigner"
	ethclient "github.com/kaleido-io/paladin/kata/pkg/ethclient"

	ethtypes "github.com/hyperledger/firefly-signer/pkg/ethtypes"

	mock "github.com/stretchr/testify/mock"
)

// ABIFunctionRequestBuilder is an autogenerated mock type for the ABIFunctionRequestBuilder type
type ABIFunctionRequestBuilder struct {
	mock.Mock
}

// Block provides a mock function with given fields: _a0
func (_m *ABIFunctionRequestBuilder) Block(_a0 uint64) ethclient.ABIFunctionRequestBuilder {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Block")
	}

	var r0 ethclient.ABIFunctionRequestBuilder
	if rf, ok := ret.Get(0).(func(uint64) ethclient.ABIFunctionRequestBuilder); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ethclient.ABIFunctionRequestBuilder)
		}
	}

	return r0
}

// BlockRef provides a mock function with given fields: blockRef
func (_m *ABIFunctionRequestBuilder) BlockRef(blockRef ethclient.BlockRef) ethclient.ABIFunctionRequestBuilder {
	ret := _m.Called(blockRef)

	if len(ret) == 0 {
		panic("no return value specified for BlockRef")
	}

	var r0 ethclient.ABIFunctionRequestBuilder
	if rf, ok := ret.Get(0).(func(ethclient.BlockRef) ethclient.ABIFunctionRequestBuilder); ok {
		r0 = rf(blockRef)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ethclient.ABIFunctionRequestBuilder)
		}
	}

	return r0
}

// BuildCallData provides a mock function with given fields:
func (_m *ABIFunctionRequestBuilder) BuildCallData() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for BuildCallData")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Call provides a mock function with given fields:
func (_m *ABIFunctionRequestBuilder) Call() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Call")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CallJSON provides a mock function with given fields:
func (_m *ABIFunctionRequestBuilder) CallJSON() ([]byte, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for CallJSON")
	}

	var r0 []byte
	var r1 error
	if rf, ok := ret.Get(0).(func() ([]byte, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() []byte); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GasLimit provides a mock function with given fields: _a0
func (_m *ABIFunctionRequestBuilder) GasLimit(_a0 uint64) ethclient.ABIFunctionRequestBuilder {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GasLimit")
	}

	var r0 ethclient.ABIFunctionRequestBuilder
	if rf, ok := ret.Get(0).(func(uint64) ethclient.ABIFunctionRequestBuilder); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ethclient.ABIFunctionRequestBuilder)
		}
	}

	return r0
}

// Input provides a mock function with given fields: _a0
func (_m *ABIFunctionRequestBuilder) Input(_a0 interface{}) ethclient.ABIFunctionRequestBuilder {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Input")
	}

	var r0 ethclient.ABIFunctionRequestBuilder
	if rf, ok := ret.Get(0).(func(interface{}) ethclient.ABIFunctionRequestBuilder); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ethclient.ABIFunctionRequestBuilder)
		}
	}

	return r0
}

// Output provides a mock function with given fields: _a0
func (_m *ABIFunctionRequestBuilder) Output(_a0 interface{}) ethclient.ABIFunctionRequestBuilder {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Output")
	}

	var r0 ethclient.ABIFunctionRequestBuilder
	if rf, ok := ret.Get(0).(func(interface{}) ethclient.ABIFunctionRequestBuilder); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ethclient.ABIFunctionRequestBuilder)
		}
	}

	return r0
}

// RawTransaction provides a mock function with given fields:
func (_m *ABIFunctionRequestBuilder) RawTransaction() (ethtypes.HexBytes0xPrefix, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for RawTransaction")
	}

	var r0 ethtypes.HexBytes0xPrefix
	var r1 error
	if rf, ok := ret.Get(0).(func() (ethtypes.HexBytes0xPrefix, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() ethtypes.HexBytes0xPrefix); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ethtypes.HexBytes0xPrefix)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SignAndSend provides a mock function with given fields:
func (_m *ABIFunctionRequestBuilder) SignAndSend() (ethtypes.HexBytes0xPrefix, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for SignAndSend")
	}

	var r0 ethtypes.HexBytes0xPrefix
	var r1 error
	if rf, ok := ret.Get(0).(func() (ethtypes.HexBytes0xPrefix, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() ethtypes.HexBytes0xPrefix); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ethtypes.HexBytes0xPrefix)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Signer provides a mock function with given fields: _a0
func (_m *ABIFunctionRequestBuilder) Signer(_a0 string) ethclient.ABIFunctionRequestBuilder {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Signer")
	}

	var r0 ethclient.ABIFunctionRequestBuilder
	if rf, ok := ret.Get(0).(func(string) ethclient.ABIFunctionRequestBuilder); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ethclient.ABIFunctionRequestBuilder)
		}
	}

	return r0
}

// TX provides a mock function with given fields:
func (_m *ABIFunctionRequestBuilder) TX() *ethsigner.Transaction {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for TX")
	}

	var r0 *ethsigner.Transaction
	if rf, ok := ret.Get(0).(func() *ethsigner.Transaction); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ethsigner.Transaction)
		}
	}

	return r0
}

// TXVersion provides a mock function with given fields: _a0
func (_m *ABIFunctionRequestBuilder) TXVersion(_a0 ethclient.EthTXVersion) ethclient.ABIFunctionRequestBuilder {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for TXVersion")
	}

	var r0 ethclient.ABIFunctionRequestBuilder
	if rf, ok := ret.Get(0).(func(ethclient.EthTXVersion) ethclient.ABIFunctionRequestBuilder); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ethclient.ABIFunctionRequestBuilder)
		}
	}

	return r0
}

// To provides a mock function with given fields: _a0
func (_m *ABIFunctionRequestBuilder) To(_a0 *ethtypes.Address0xHex) ethclient.ABIFunctionRequestBuilder {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for To")
	}

	var r0 ethclient.ABIFunctionRequestBuilder
	if rf, ok := ret.Get(0).(func(*ethtypes.Address0xHex) ethclient.ABIFunctionRequestBuilder); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ethclient.ABIFunctionRequestBuilder)
		}
	}

	return r0
}

// NewABIFunctionRequestBuilder creates a new instance of ABIFunctionRequestBuilder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewABIFunctionRequestBuilder(t interface {
	mock.TestingT
	Cleanup(func())
}) *ABIFunctionRequestBuilder {
	mock := &ABIFunctionRequestBuilder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
