// Code generated by mockery v2.44.1. DO NOT EDIT.

package enginemocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Sequencer is an autogenerated mock type for the Sequencer type
type Sequencer struct {
	mock.Mock
}

// GetLatestAssembleRoundForTx provides a mock function with given fields: ctx, txID
func (_m *Sequencer) GetLatestAssembleRoundForTx(ctx context.Context, txID string) int64 {
	ret := _m.Called(ctx, txID)

	if len(ret) == 0 {
		panic("no return value specified for GetLatestAssembleRoundForTx")
	}

	var r0 int64
	if rf, ok := ret.Get(0).(func(context.Context, string) int64); ok {
		r0 = rf(ctx, txID)
	} else {
		r0 = ret.Get(0).(int64)
	}

	return r0
}

// NewSequencer creates a new instance of Sequencer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSequencer(t interface {
	mock.TestingT
	Cleanup(func())
}) *Sequencer {
	mock := &Sequencer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
