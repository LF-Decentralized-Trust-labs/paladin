// Code generated by mockery v2.44.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// IdentityResolver is an autogenerated mock type for the IdentityResolver type
type IdentityResolver struct {
	mock.Mock
}

// ConnectToBaseLeger provides a mock function with given fields:
func (_m *IdentityResolver) ConnectToBaseLeger() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ConnectToBaseLeger")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetDispatchAddress provides a mock function with given fields: preferredAddresses
func (_m *IdentityResolver) GetDispatchAddress(preferredAddresses []string) string {
	ret := _m.Called(preferredAddresses)

	if len(ret) == 0 {
		panic("no return value specified for GetDispatchAddress")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func([]string) string); ok {
		r0 = rf(preferredAddresses)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// IsCurrentNode provides a mock function with given fields: nodeID
func (_m *IdentityResolver) IsCurrentNode(nodeID string) bool {
	ret := _m.Called(nodeID)

	if len(ret) == 0 {
		panic("no return value specified for IsCurrentNode")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(nodeID)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// NewIdentityResolver creates a new instance of IdentityResolver. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIdentityResolver(t interface {
	mock.TestingT
	Cleanup(func())
}) *IdentityResolver {
	mock := &IdentityResolver{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
