// Code generated by mockery v2.40.2. DO NOT EDIT.

package txmMocks

import (
	http "net/http"

	manager "github.com/kaleido-io/paladin-transaction-manager/pkg/manager"
	mock "github.com/stretchr/testify/mock"
)

// PaladinTransactionManager is an autogenerated mock type for the PaladinTransactionManager type
type PaladinTransactionManager struct {
	mock.Mock
}

// SubmitTransaction provides a mock function with given fields: r, args, reply
func (_m *PaladinTransactionManager) SubmitTransaction(r *http.Request, args *manager.TransactionArgs, reply *manager.TransactionReply) error {
	ret := _m.Called(r, args, reply)

	if len(ret) == 0 {
		panic("no return value specified for SubmitTransaction")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*http.Request, *manager.TransactionArgs, *manager.TransactionReply) error); ok {
		r0 = rf(r, args, reply)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewPaladinTransactionManager creates a new instance of PaladinTransactionManager. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPaladinTransactionManager(t interface {
	mock.TestingT
	Cleanup(func())
}) *PaladinTransactionManager {
	mock := &PaladinTransactionManager{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
