import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'java'
    id 'application'
    id 'com.google.protobuf' version '0.9.4'
}

mainClassName = 'io.kaleido.Main'
group = 'io.kaleido'
version = '1.0-SNAPSHOT'

task wrapper(type: Wrapper){}

application {
    applicationDefaultJvmArgs = ["-Djna.library.path=" + file("${rootDir}/kata").absolutePath]
}

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
    environment "DYLD_LIBRARY_PATH", file("${rootDir}/kata").absolutePath
    environment "LD_LIBRARY_PATH", file("${rootDir}/kata").absolutePath
}

tasks.named('compileJava') {
    dependsOn ':kata:buildSharedLibrary'
}

configurations {
    protocFilesImport
}

dependencies {
    protocFilesImport project(path: ':kata', configuration: 'protocFiles')
}

tasks.register('collectProtocFiles', Copy) {
    from zipTree(configurations.protocFilesImport.getFiles()[0])
    into "src/main/proto"
    dependsOn(':kata:zipProtocFiles')
}

tasks.named('generateProto') {
    dependsOn 'collectProtocFiles'
}

tasks.named('processResources') {
    dependsOn 'generateProto'
}

tasks.named('processResources') {
    dependsOn ':kata:protoc'
}

def grpcVersion = '1.65.0'
def protobufVersion = '3.25.1'
def protocVersion = protobufVersion

dependencies {
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-services:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-netty:${grpcVersion}"

    // Native UDS support on Mac
    implementation("io.netty:netty-transport-native-kqueue:4.1.111.Final") {
        artifact {
            classifier = Os.isFamily(Os.FAMILY_MAC)
                    ? (
                        Os.isArch('aarch64')
                            ? 'osx-aarch_64'
                            : 'osx-x86_64'
                    ): null;
        }
    }

    // Native UDS support on Linux
    implementation("io.netty:netty-transport-native-epoll:4.1.111.Final") {
        artifact {
            classifier = (!Os.isFamily(Os.FAMILY_MAC) && Os.isFamily(Os.FAMILY_UNIX))
                    ? (
                    Os.isArch('aarch64')
                            ? 'linux-aarch_64'
                            : 'linux-x86_64'
            ): null;
        }
    }

    implementation project(path: ':kata', configuration: 'libkata')
    implementation 'net.java.dev.jna:jna-platform:5.14.0'
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"

    compileOnly "org.apache.tomcat:annotations-api:6.0.53"

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

